var searchIndex = new Map(JSON.parse('[\
["redstone",{"t":"CCCQQCCCCCCCIHHHFNONNONNNNONONNNNNNHHFNNNNNNNONNNONKMMMMIIICCHCHHICCCCCCCCKKMMKRKHMHMFNNCNCNNNNNNNPPPKPGPPPPPPPNNNNNNMNNNNNNMNNNNNNKMKKMMIRIKISTRRNNNHMHMCCCCCSSSSSSSSSSSFNNNNNNONNNNOONHHNNNNFNNNNNNNONNNNHHNNNONHFNNNNNNONNNNNHHNNNNCCCCKMKKRKMHMKMKM","n":["core","crypto","network","print_and_panic","print_debug","protocol","utils","aggregator","config","processor","processor_result","validator","Matrix","aggregate_matrix","aggregate_values","make_value_signer_matrix","Config","assert_or_revert","block_timestamp","borrow","borrow_mut","feed_ids","feed_index","fmt","from","into","signer_count_threshold","signer_index","signers","try_from","try_into","type_id","validate_signer_count_threshold","validate_timestamp","vzip","make_processor_result","process_payload","ProcessorResult","assert_or_revert","borrow","borrow_mut","eq","fmt","from","into","min_timestamp","try_from","try_into","type_id","values","vzip","Validator","feed_index","signer_index","validate_signer_count_threshold","validate_timestamp","EcdsaUncompressedPublicKey","Keccak256Hash","Secp256SigRs","keccak256","recover","keccak256","crypto256","recover_address","recover_public_key","_Network","as_str","assert","casper","error","flattened","from_bytes_repr","print_debug","specific","AsAsciiStr","AsHexStr","as_ascii_str","as_hex_str","Assert","ErrorArg","Unwrap","assert_or_revert","assert_or_revert","assert_or_revert_bool_with","unwrap_or_revert","Casper","borrow","borrow_mut","error","from","from_bytes_repr","into","print","revert","try_from","try_into","type_id","vzip","ArrayIsEmpty","ClonedContractError","ContractError","ContractErrorContent","CryptographicError","Error","InsufficientSignerCount","NonEmptyPayloadRemainder","NumberOverflow","SizeNotSupported","TimestampTooFuture","TimestampTooOld","WrongRedStoneMarker","assert_or_revert","borrow","borrow_mut","clone","clone_into","clone_to_uninit","code","code","contract_error","fmt","fmt","from","into","message","to_owned","to_string","try_from","try_into","type_id","vzip","Flattened","flattened","FromBytesRepr","Sanitized","from_bytes_repr","sanitized","Bytes","BytesRepr","Network","NetworkSpecific","U256","VALUE_SIZE","VALUE_SIZE","ValueRepr","_Self","as_ascii_str","as_hex_str","from_bytes_repr","print","print","revert","revert","constants","data_package","data_point","marker","payload","DATA_FEED_ID_BS","DATA_PACKAGES_COUNT_BS","DATA_POINTS_COUNT_BS","DATA_POINT_VALUE_BYTE_SIZE_BS","MAX_TIMESTAMP_AHEAD_MS","MAX_TIMESTAMP_DELAY_MS","REDSTONE_MARKER","REDSTONE_MARKER_BS","SIGNATURE_BS","TIMESTAMP_BS","UNSIGNED_METADATA_BYTE_SIZE_BS","DataPackage","assert_or_revert","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_points","eq","fmt","from","into","signer_address","timestamp","to_owned","trim_data_package","trim_data_packages","try_from","try_into","type_id","vzip","DataPoint","assert_or_revert","borrow","borrow_mut","clone","clone_into","clone_to_uninit","eq","feed_id","fmt","from","into","to_owned","trim_data_point","trim_data_points","try_from","try_into","type_id","value","vzip","trim_redstone_marker","Payload","assert_or_revert","borrow","borrow_mut","clone","clone_into","clone_to_uninit","data_packages","fmt","from","into","make","to_owned","trim_metadata","trim_payload","try_from","try_into","type_id","vzip","filter","median","trim","trim_zeros","FilterSome","filter_some","Averageable","Avg","Item","Median","avg","maybe_pick_median","median","Trim","trim_end","TrimZeros","trim_zeros"],"q":[[0,"redstone"],[7,"redstone::core"],[12,"redstone::core::aggregator"],[16,"redstone::core::config"],[35,"redstone::core::processor"],[37,"redstone::core::processor_result"],[51,"redstone::core::validator"],[56,"redstone::crypto"],[61,"redstone::crypto::keccak256"],[62,"redstone::crypto::recover"],[64,"redstone::crypto::recover::crypto256"],[65,"redstone::network"],[74,"redstone::network::as_str"],[78,"redstone::network::assert"],[85,"redstone::network::casper"],[98,"redstone::network::error"],[131,"redstone::network::flattened"],[133,"redstone::network::from_bytes_repr"],[137,"redstone::network::specific"],[153,"redstone::protocol"],[158,"redstone::protocol::constants"],[169,"redstone::protocol::data_package"],[190,"redstone::protocol::data_point"],[210,"redstone::protocol::marker"],[211,"redstone::protocol::payload"],[230,"redstone::utils"],[234,"redstone::utils::filter"],[236,"redstone::utils::median"],[243,"redstone::utils::trim"],[245,"redstone::utils::trim_zeros"],[247,"core::option"],[248,"alloc::vec"],[249,"core::ops::function"],[250,"core::fmt"],[251,"core::result"],[252,"core::any"],[253,"alloc::string"],[254,"core::cmp"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,20,20,20,20,20,20,20,20,20,20,20,20,20,0,23,23,23,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,27,0,33,0,0,30,0,33,0,48,48,0,48,0,48,48,48,48,48,48,48,8,8,8,0,8,0,8,8,8,8,8,8,8,8,8,8,8,8,8,35,8,8,8,8,8,8,35,8,8,8,8,8,8,0,37,0,0,38,39,0,49,0,0,0,0,49,49,49,1,1,1,0,49,0,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,5,5,5,5,0,40,40,40,40,40,40,40,40,40,40,40,40,0,0,40,40,40,40,40,0,0,19,19,19,19,19,19,19,19,19,19,19,19,0,0,19,19,19,19,0,0,0,0,0,41,0,0,45,0,42,0,45,0,46,0,47],"f":"`````````````{{{f{{f{{d{b}}}}}}h}{{f{b}}}}{{h{f{j}}}{{f{b}}}}{{{l{h}}{f{j}}}{{f{{f{{d{b}}}}}}}}`{{cei}g{}{}{}{{Ab{{l{g}}}{{n{A`}}}}}}`{{{l{c}}}{{l{e}}}{}{}}{{{l{Adc}}}{{l{Ade}}}{}{}}`{{{l{h}}b}{{d{Af}}}}{{{l{h}}{l{AdAh}}}Aj}{cc{}}{ce{}{}}`{{{l{h}}{l{{An{Al}}}}}{{d{Af}}}}`{c{{B`{e}}}{}{}}0{{{l{c}}}Bb{}}{{{l{h}}Af{l{{An{{d{b}}}}}}}{{f{b}}}}{{{l{h}}AfBd}Bd}5{{hBf}Bh}{{hBj}Bh}`=<;{{{l{Bh}}{l{Bh}}}Bl}{{{l{Bh}}{l{AdAh}}}Aj}:9`776`9`{{{l{Bn}}b}{{d{Af}}}}{{{l{Bn}}{l{{An{Al}}}}}{{d{Af}}}}{{{l{Bn}}Af{l{{An{{d{b}}}}}}}{{f{b}}}}{{{l{Bn}}AfBd}Bd}`````{{{l{{An{Al}}}}}{{C`{Al}}}}`{{{f{Al}}{f{Al}}}{{f{Al}}}}{{{C`{Al}}{C`{Al}}Al}{{C`{Al}}}}```````````{{{l{Cb}}}Cd}{{{l{Cf}}}Cd}```{{ceg}cCh{{Cj{{l{c}}}{{n{Bl}}}}}{{Ab{{l{c}}}{{n{A`}}}}}}{{Clce}Cl{}{{Cj{{l{Cl}}}{{n{A`}}}}}}{{Blc}Cn{{Ab{}{{n{A`}}}}}}{{{Db{}{{D`{c}}}}e}g{}{{Cj{{l{c}}}{{n{A`}}}}}{}}`{{{l{c}}}{{l{e}}}{}{}}{{{l{Adc}}}{{l{Ade}}}{}{}}`{cc{}}`{ce{}{}}{CdCn}{A`Dd}{c{{B`{e}}}{}{}}0{{{l{c}}}Bb{}}4`````````````{{cei}g{}{}{}{{Ab{{l{g}}}{{n{A`}}}}}}87{{{l{A`}}}A`}{{{l{c}}{l{Ade}}}Cn{}{}}{{{l{c}}}Cn{}}{{{l{Df}}}Al}{{{l{A`}}}Dh}{cA`Df}{{{l{A`}}{l{AdAh}}}Aj}0=<{{{l{Df}}}Cd}{{{l{c}}}e{}{}}{{{l{c}}}Cd{}}<<;?`{{{l{Dj}}}c{}}``{cDl{}}{DnDn}`````````{{{l{b}}}Cd}0{{{f{Al}}}b}{CdCn}0{A`Dd}0`````````````````{{cei}g{}{}{}{{Ab{{l{g}}}{{n{A`}}}}}}{{{l{c}}}{{l{e}}}{}{}}{{{l{Adc}}}{{l{Ade}}}{}{}}{{{l{j}}}j}{{{l{c}}{l{Ade}}}Cn{}{}}{{{l{c}}}Cn{}}`{{{l{j}}{l{j}}}Bl}{{{l{j}}{l{AdAh}}}Aj}{cc{}}{ce{}{}}``{{{l{c}}}e{}{}}{{{l{Ad{f{Al}}}}}j}{{{l{Ad{f{Al}}}}Af}{{f{j}}}}{c{{B`{e}}}{}{}}0{{{l{c}}}Bb{}}5`>=<{{{l{E`}}}E`};:{{{l{E`}}{l{E`}}}Bl}`{{{l{E`}}{l{AdAh}}}Aj}987{{{l{Ad{f{Al}}}}Af}E`}{{{l{Ad{f{Al}}}}AfAf}{{f{E`}}}}665`:{{{l{Ad{f{Al}}}}}Cn}`{{cei}g{}{}{}{{Ab{{l{g}}}{{n{A`}}}}}}{{{l{c}}}{{l{e}}}{}{}}{{{l{Adc}}}{{l{Ade}}}{}{}}{{{l{Bf}}}Bf}{{{l{c}}{l{Ade}}}Cn{}{}}{{{l{c}}}Cn{}}`{{{l{Bf}}{l{AdAh}}}Aj}{cc{}}{ce{}{}}{{{l{Ad{f{Al}}}}}Bf}{{{l{c}}}e{}{}}{{{l{Ad{f{Al}}}}}Af}2{c{{B`{e}}}{}{}}0{{{l{c}}}Bb{}}5`````{{{l{Eb}}}c{}}````{{EdEd}Ed}{{ccc}{{d{c}}}Ef}{{{Ej{}{{Eh{c}}}}}c{}}`{{{l{AdEl}}Af}c{}}`{EnEn}","D":"Ed","p":[[8,"U256",137],[6,"Option",247],[5,"Vec",248],[5,"Config",16],[5,"DataPackage",169],[1,"reference"],[17,"Output"],[6,"Error",98],[10,"FnOnce",249],[0,"mut"],[1,"usize"],[5,"Formatter",250],[8,"Result",250],[1,"u8"],[1,"slice"],[6,"Result",251],[5,"TypeId",252],[1,"u64"],[5,"Payload",211],[5,"ProcessorResult",37],[8,"Bytes",137],[1,"bool"],[10,"Validator",51],[1,"array"],[10,"AsAsciiStr",74],[5,"String",253],[10,"AsHexStr",74],[10,"Debug",250],[10,"Fn",249],[10,"Assert",78],[1,"unit"],[17,"ErrorArg"],[10,"Unwrap",78],[1,"never"],[10,"ContractErrorContent",98],[1,"u16"],[10,"Flattened",131],[10,"FromBytesRepr",133],[10,"Sanitized",133],[5,"DataPoint",190],[10,"FilterSome",234],[10,"Avg",236],[10,"PartialOrd",254],[17,"Item"],[10,"Median",236],[10,"Trim",243],[10,"TrimZeros",245],[5,"Casper",85],[10,"NetworkSpecific",137]],"r":[],"b":[[120,"impl-Debug-for-Error"],[121,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM0AEwABAA0AEAAAABIAAAAUAAEAFwABABwAAAAeAAYAJwAEAC8AAgAzAAAAOQAgAFsAAABdAAUAZgAAAHAACgB9ADYAtgASAMsAEQDfABgA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
